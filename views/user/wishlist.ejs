<%- include('../partials/user/header') %>

    <section class="section-b-space pt-0"> 
      <div class="heading-banner">
        <div class="custom-container container">
          <div class="row align-items-center">
            <div class="col-sm-6">
              <h4>Wishlist</h4>
            </div>
            <div class="col-sm-6">
              <ul class="breadcrumb float-end">
                <li class="breadcrumb-item"> <a class="text-decoration-none text-black" href="/">Home </a></li>
                <li class="breadcrumb-item active"> <a class="text-decoration-none text-black" href="#">Wishlist</a></li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>
    <section class="section-b-space pt-0"> 
      <div class="custom-container container wishlist-box"> 
        <div class="product-tab-content ratio1_3">
          <div class="row-cols-xl-4 row-cols-md-3 row-cols-2 grid-section view-option row gy-4 g-xl-4">
        
            <% if (wishlist && wishlist.products && wishlist.products.length > 0) { %>
                <% wishlist.products.forEach((item) => { %>
                  <div class="col products" data-product-id="<%= item.productId._id %>">
                    <div class="product-box-3 product-wishlist" >
                      <div class="img-wrapper">
                        <div class="label-block">
                          <a class="label-2 wishlist-icon delete-button"
                            href="javascript:void(0)"
                            onclick="removeFromWishlist('<%= item.productId._id %>')"
                            title="Remove from Wishlist">
                            <i class="iconsax" data-icon="trash" aria-hidden="true"></i>
                          </a>
                        </div>
                        <div class="product-image">
                          <a class="pro-first" href="/productDetails?id=<%= item.productId._id %>">
                            <img class="bg-img" src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                          </a>
                          <a class="pro-sec" href="/productDetails?id=<%= item.productId._id %>">
                            <img class="bg-img" src="<%= item.productId.productImage[1] %>" alt="<%= item.productId.productName %>">
                          </a>
                        </div>
                      </div>
                      <div class="product-detail">
                        <a class="text-decoration-none text-dark" href="/productDetails?id=<%= item.productId._id %>">
                          <h6><%= item.productId.productName %></h6>
                        </a>
                        <p>
                          $<%= item.productId.salePrice %>
                          <% if (item.productId.regularPrice > item.productId.salePrice) { %>
                            <del>$<%= item.productId.regularPrice %></del>
                          <% } %>
                         </p>

                      </div>
                      <a class="btn btn-dark" onclick="addToCart('<%=item.productId._id%>')">Add To Cart</a>
                    </div>
                  </div>
                <% }); %>
              <% } else { %>
                <div class="col-12">
                  <p class="text-center">Your wishlist is empty.</p>
                  <a href="/shop" class="btn btn-dark">Go to Shop</a>

                  </div>
                <% } %>
           
            
          </div>
        </div>
      </div>
    </section>
    <%- include('../partials/user/footer') %>


    <script>
        
async function removeFromWishlist(productId) {
    try {
        // Show confirmation dialog using SweetAlert
        const result = await Swal.fire({
            title: 'Remove from Wishlist?',
            text: 'Are you sure you want to remove this item from your wishlist?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel'
        });

        // If user confirms the deletion
        if (result.isConfirmed) {
            const response = await fetch(`/wishlist/remove/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (response.ok) {
                // Show success message
                Swal.fire({
                    title: 'Removed!',
                    text: 'Product has been removed from your wishlist.',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false
                });

                // Remove the product from the DOM
                const productElement = document.querySelector(`.products[data-product-id="${productId}"]`);
                if (productElement) {
                    // Add a fade-out effect
                    productElement.style.transition = 'opacity 0.3s ease';
                    productElement.style.opacity = '0';

                    // After fade-out, remove the element from the DOM
                    setTimeout(() => {
                        productElement.remove();

                        // Check if there are any remaining products
                        const remainingProducts = document.querySelectorAll('.products');
                        if (remainingProducts.length === 0) {
                            // Show the "Your wishlist is empty" message and "Go to Shop" button
                            const wishlistContainer = document.querySelector('.grid-section');
                            wishlistContainer.innerHTML = `
                                <div class="col-12">
                                    <p class="text-center">Your wishlist is empty.</p>
                                    <a href="/shop" class="btn btn-dark">Go to Shop</a>
                                </div>
                            `;
                        }
                    }, 300);
                }
            } else {
                // Show error message
                Swal.fire({
                    title: 'Error!',
                    text: data.error || 'Failed to remove product from wishlist.',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
            }
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred. Please try again.',
            icon: 'error',
            confirmButtonColor: '#3085d6'
        });
    }
}


async function addToCart(productId) {
    const quantity= 1
    try {
       const response = await fetch('/cart/add',{
        method:'POST',
        headers:{
          'Content-Type': 'application/json'
        },body:JSON.stringify({productId,quantity})

      })
      const data = await response.json()
      if(response.ok){
       Toastify({
                text: "Product added to cart successfully!",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "right", // `left`, `center` or `right`
                backgroundColor: "#28a745", // Success color (green)
                className: "info",
                escapeMarkup: false, 
                style: {
        color: '#fff',
        fontSize:'16px',
        borderRadius:'20px'
      },
            }).showToast();
        } else {
            Toastify({
                text: data.message || "Error adding to cart",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "#dc3545", // Error color (red)
                className: "error",
                style: {
                  color: "#ffffff", // Text color
                fontSize: "16px",
                borderRadius:'20px',
                },
            }).showToast();
        }
    } catch (error) {
        console.error("Error:", error.message);
        Toastify({
            text:  "Something went wrong. Please try again.",
            duration: 3000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: "#dc3545",
            style: {
                  color: "#ffffff", // Text color
                fontSize: "16px",
                borderRadius:'20px'
                },
        }).showToast();
    }
}
    </script>