<%- include('../partials/user/header') %>
    <section class="section-b-space pt-0">
        <div class="heading-banner">
            <div class="custom-container container">
                <div class="row align-items-center">
                    <div class="col-sm-6">
                        <h4>Check Out</h4>
                    </div>
                    <div class="col-sm-6">
                        <ul class="breadcrumb float-end">
                            <li class="breadcrumb-item">
                                <a class="text-decoration-none text-black" href="/">Home</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a class="text-decoration-none text-black" href="/cart">Cart</a>
                            </li>
                            <li class="breadcrumb-item active">
                                <a class="text-decoration-none text-black" href="#">Check Out</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="checkout-container">
        <div class="custom-container container">
            <div class="row">
                <!-- Left Column: Address and Payment -->
                <div class="col-lg-8">
                    <!-- Address Section -->
                    <div class="checkout-box mb-4">
                        <div class="checkout-title">
                         </div>
                        <div class="address-option">
                            <div class="address-title">
                                <h4>Shipping Address </h4><a class="text-decoration-none" href="#"
                                    data-bs-toggle="modal" data-bs-target="#address-modal" title="add product"
                                    tabindex="0">+ Add New Address</a>
                            </div>
                            <div class="row" id="currentAddresses">
                            
                                <% if (userAddress && userAddress.length> 0) { %>
                                    <% userAddress.forEach((addressGroup)=> { %>
                                      <% addressGroup.address.forEach(( address, index)=> { %>
                                <div class="col-xxl-4">
                                    <label for="address-billing-0"> <span class="delivery-address-box"> <span
                                                class="form-check">
                                                <input class="custom-radio" id="address-billing-0" type="radio" value="<%= address._id %>"
                                                    checked="checked" name="address"></span><span
                                                    
                                                class="address-detail"><span class="address"> 
                                                    <span class="buttons d-flex justify-content-end align-items-start">
                                                        <a class="btn btn-outline-danger sm " href="/editAddress?id=<%= address._id %>&loc=%2Fcheckout" title="Edit">Edit</a>
                                                     </span><span
                                                        class="address-title"><%= address.addressType %> </span></span><span
                                                    class="address"> <span class="address-home"> <span
                                                            class="address-tag"> Address:</span> <%= address.landMark %>,<%= address.city %></span></span><span
                                                    class="address"> <span class="address-home"> <span
                                                            class="address-tag">Pin Code:</span><%= address.pinCode %></span></span><span
                                                    class="address"> <span class="address-home"> <span
                                                            class="address-tag">Phone :</span>+91 <%= address.phone %></span></span></span>
                                                        </span>
                                                           
                                                    </label>
                                                        </div>
                                <% }); %>
                                <% }); %>
                                  <% } else { %>
                                    <p>No addresses found.</p>
                                    <% } %>
                            </div>
                        </div>
                        

                        <div class="payment-options">
                            <h4 class="mb-3">Payment Method</h4>
                            <div class="row gy-3">
                                <div class="col-sm-6">
                                   
                                    <div class="payment-box position-relative">
                                        <!-- Radio Button -->
                                        <input 
                                            class="form-check-input custom-radio me-2 <% if (finalTotal > 40000) { %> disabled-radio <% } %>" 
                                            id="cod" 
                                            value="COD" 
                                            type="radio" 
                                            name="paymentMethod" 
                                            <%= finalTotal > 40000 ? 'disabled' : '' %>
                                        >
                                        <label for="cod" class="form-check-label">COD</label>
                                
                                        <!-- Tooltip Icon -->
                                        <% if (finalTotal > 40000) { %>
                                        <i 
                                            class="fas fa-info-circle text-muted ms-2" 
                                            data-bs-toggle="tooltip" 
                                            data-bs-placement="top" 
                                            title="COD is not available for orders above ₹40,000"
                                        ></i>
                                        <% } %>
                                    </div>
                                    <% if (finalTotal > 40000) { %>
                                        <p class="text-danger p-0 m-0">COD is not available for orders above ₹40,000</p>
                                    <% } %>
                                </div>
                                
                                <script>
                                    // Wait for DOM to be fully loaded
                                    document.addEventListener('DOMContentLoaded', function () {
                                        // Initialize all tooltips on the page
                                        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
                                        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                                            new bootstrap.Tooltip(tooltipTriggerEl);
                                        });
                                    });
                                </script>
                                
                                
                                <style>
                                    .disabled-radio {
                                        accent-color: #d3d3d3;  
                                        cursor: not-allowed;
                                        opacity: 0.6;
                                    }
                                
                                    .payment-box {
                                        display: flex;
                                        align-items: center;
                                    }
                                
                                    .fa-info-circle {
                                        cursor: pointer;  
                                    }
                                </style>
                                
                                
                                <div class="col-sm-6">
                                    <div class="payment-box">
                                        <input class="custom-radio me-2" id="wallet" value="wallet"  type="radio" name="paymentMethod">
                                        <label for="wallet">Wallet</label>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="payment-box">
                                        <input class="custom-radio me-2" id="razor-pay" value="ONLINE" type="radio" name="paymentMethod">
                                        <label for="ONLINE">Razor Pay</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right Column: Cart Summary -->
                <div class="col-lg-4">
                    <!-- Product Carousel -->
                    <div class="product-carousel mb-4">
                        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000">
                            <div class="carousel-indicators">
                                <% cartItems.forEach((item, index) => { %>
                                    <button type="button" 
                                            data-bs-target="#productCarousel" 
                                            data-bs-slide-to="<%= index %>" 
                                            class="<%= index === 0 ? 'active' : '' %>"
                                            aria-current="<%= index === 0 ? 'true' : 'false' %>"
                                            aria-label="Slide <%= index + 1 %>">
                                    </button>
                                <% }); %>
                            </div>
                            <div class="carousel-inner">
                                <% cartItems.forEach((item, index) => { %>
                                    <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                        <div class="product-slide">
                                            <div class="product-image">
                                                <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                                            </div>
                                            <div class="product-info">
                                                <h5><%= item.productId.productName %></h5>
                                                <div class="price-info">
                                                    <span class="sale-price">₹<%= item.salePrice.toFixed(2) %></span>
                                                    <% if (item.productId.regularPrice > item.salePrice) { %>
                                                        <span class="regular-price">₹<%= item.productId.regularPrice %></span>
                                                        <span class="discount">
                                                            <%= Math.round((item.productId.regularPrice - item.salePrice) / item.productId.regularPrice * 100) %>% OFF
                                                        </span>
                                                    <% } %>
                                                </div>
                                                <div class="quantity">Qty: <%= item.quantity %></div>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            <% if (cartItems.length > 1) { %>
                                <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon"></span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon"></span>
                                </button>
                            <% } %>
                        </div>
                    </div>

                    <!-- Price Details -->
                    <div class="checkout-box">
                        <div class="checkout-title">
                            <h4>Price Details</h4>
                        </div>
                        <div class="price-details">
                            <div class="cart-listing">

                                <div class="summary-total">
                                    <ul>
                                        <li>
                                            <p>Subtotal</p><span>
                                                ₹ <%= total%>
                                            </span>
                                        </li>
                                        <li>
                                            <p>Shipping</p><span>FREE</span>
                                        </li>
                                        <li>
                                            <p>Discount</p><span id="discount">
                                                ₹<%= discount %>
                                            </span>
                                        </li>

                                        <!-- <li> 
                          <p>Wallet Balance</p><span>$ -84.40</span>
                        </li> -->
                                    </ul>
                                    <div class="coupon-section mb-3">
                                        <h5 class="mb-3">Available Coupons</h5>
                                        <% if (coupon && coupon.length > 0) { %>
                                            <div class="coupon-dropdown">
                                                <div class="dropdown-toggle" id="couponDropdown">
                                                    <div class="toggle-content">
                                                        <i class="fas fa-tag"></i>
                                                        <span>Apply Coupon Code</span>
                                                    </div>
                                                    <i class="fas fa-chevron-down toggle-arrow"></i>
                                                </div>
                                                <div class="dropdown-menu">
                                                    <% coupon.forEach((coup) => { %>
                                                        <div class="dropdown-item" 
                                                             data-coupon="<%= coup.name %>"
                                                             data-discount="<%= coup.offerPrice %>"
                                                             data-min-purchase="<%= coup.minimumPrice %>">
                                                            <div class="coupon-left">
                                                                <i class="fas fa-ticket-alt coupon-icon"></i>
                                                                <div class="coupon-info">
                                                                    <span class="coupon-code"><%= coup.name %></span>
                                                                    <span class="coupon-discount">Save ₹<%= coup.offerPrice %></span>
                                                                    <span class="coupon-min">
                                                                        <i class="fas fa-info-circle"></i>
                                                                        Min. order ₹<%= coup.minimumPrice %>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            <button class="copy-btn" data-coupon="<%= coup.name %>">
                                                                <i class="far fa-copy"></i> Copy
                                                            </button>
                                                        </div>
                                                    <% }); %>
                                                </div>
                                            </div>
                                            <div id="couponDetails" class="mt-3" style="display: none;"></div>
                                        <% } else { %>
                                            <p class="text-muted">No coupons available at the moment</p>
                                        <% } %>
                                    
                                        <!-- Manual Coupon Input -->
                                        <div class="coupon-input mt-3">
                                            <div class="input-group">
                                                <input type="text" id="couponCode" class="form-control" placeholder="Enter Coupon Code" <%= locals.couponName ? 'disabled' : '' %> value="<%= locals.couponName || '' %>">
                                                <% if (!locals.couponName) { %>
                                                    <button class="btn btn-primary" type="button" id="applyCoupon">
                                                        Apply
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn btn-danger" type="button" onclick="removeCoupon()">
                                                        Remove
                                                    </button>
                                                <% } %>
                                            </div>
                                            <div id="couponMessage" class="mt-2"></div>
                                        </div>
                                    </div>
                                    
                                <div class="total">
                                    <h6>Total : </h6>
                                    <h6 >₹<%= finalTotal %></h6>
                                </div>
                                <button id="placeOrderForm" class="btn btn_black sm w-100 rounded" >Place Order </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        /* Header and Breadcrumb styles */
        .heading-banner {
            background: #f8f9fa;
            padding: 15px 0;
            margin-bottom: 30px;
        }

        .heading-banner .custom-container {
            max-width: 1200px !important;
            margin: 0 auto;
            padding: 0 15px;
        }

        /* Main content styles */
        .checkout-container {
            padding: 30px 0;
            width: 100%;
        }

        .checkout-container .custom-container {
            max-width: 1750px !important;
            margin: 0 auto;
            padding: 0 30px;
        }

        .checkout-box {
            background: #fff;
            border-radius: 8px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            width: 100%;
        }

        .row {
            margin: 0;
            width: 100%;
        }

        .col-lg-8, .col-lg-4 {
            padding: 0 15px;
        }

        @media (min-width: 992px) {
            .col-lg-4 {
                position: sticky;
                top: 20px;
                height: fit-content;
            }
        }

        /* Ensure navbar stays at original width */
        header .custom-container {
            max-width: 1200px !important;
            margin: 0 auto;
            padding: 0 15px;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .heading-banner .custom-container,
            .checkout-container .custom-container,
            header .custom-container {
                padding: 0 15px;
            }
        }
    </style>

<!-- Add Address Modal -->
<div class="modal theme-modal fade address-modal" id="address-modal" tabindex="-1" role="dialog" aria-modal="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Add Address</h4>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addressForm" class="address-form needs-validation" novalidate>
                <div class="modal-body pt-0">
                    <div class="address-box">
                        <div class="row">
                            <!-- Address Type Selection -->
                            <div class="mb-4">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input custom-radio" type="radio" name="addressType" id="homeAddress" value="home" checked required>
                                    <label class="form-check-label" for="homeAddress">Home</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input custom-radio" type="radio" name="addressType" id="officeAddress" value="office" required>
                                    <label class="form-check-label" for="officeAddress">Office</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input custom-radio" type="radio" name="addressType" id="otherAddress" value="others" required>
                                    <label class="form-check-label" for="otherAddress">Others</label>
                                </div>
                                <div class="invalid-feedback">Please select an address type.</div>
                            </div>
                            <!-- Name -->
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label" for="name">Name</label>
                                    <input class="form-control" id="name" name="name" type="text" placeholder="Enter Name" required minlength="2" maxlength="50" pattern="^[A-Za-z\s]+$" oninput="this.value = this.value.replace(/[0-9]/g, '')">
                                    <div class="invalid-feedback">Enter a valid name (letters and spaces only).</div>
                                </div>
                            </div>
                            <!-- State -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label" for="state">State</label>
                                    <select class="form-select" id="state" name="state" required>
                                        <option value="">Select State</option>
                                        <option value="Andhra Pradesh">Andhra Pradesh</option>
                                        <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                        <option value="Assam">Assam</option>
                                        <option value="Bihar">Bihar</option>
                                        <option value="Chhattisgarh">Chhattisgarh</option>
                                        <option value="Delhi">Delhi</option>
                                        <option value="Goa">Goa</option>
                                        <option value="Gujarat">Gujarat</option>
                                        <option value="Haryana">Haryana</option>
                                        <option value="Himachal Pradesh">Himachal Pradesh</option>
                                        <option value="Jharkhand">Jharkhand</option>
                                        <option value="Karnataka">Karnataka</option>
                                        <option value="Kerala">Kerala</option>
                                        <option value="Madhya Pradesh">Madhya Pradesh</option>
                                        <option value="Maharashtra">Maharashtra</option>
                                        <option value="Manipur">Manipur</option>
                                        <option value="Meghalaya">Meghalaya</option>
                                        <option value="Mizoram">Mizoram</option>
                                        <option value="Nagaland">Nagaland</option>
                                        <option value="Odisha">Odisha</option>
                                        <option value="Punjab">Punjab</option>
                                        <option value="Rajasthan">Rajasthan</option>
                                        <option value="Sikkim">Sikkim</option>
                                        <option value="Tamil Nadu">Tamil Nadu</option>
                                        <option value="Telangana">Telangana</option>
                                        <option value="Tripura">Tripura</option>
                                        <option value="Uttar Pradesh">Uttar Pradesh</option>
                                        <option value="Uttarakhand">Uttarakhand</option>
                                        <option value="West Bengal">West Bengal</option>
                                    </select>
                                    <div class="invalid-feedback">Please select a state.</div>
                                </div>
                            </div>
                            <!-- City -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label" for="city">City</label>
                                    <input class="form-control" id="city" name="city" type="text" placeholder="Enter City" required minlength="2" maxlength="50" pattern="^[A-Za-z\s]+$" oninput="this.value = this.value.replace(/[0-9]/g, '')">
                                    <div class="invalid-feedback">Enter a valid city name (letters and spaces only).</div>
                                </div>
                            </div>
                            <!-- Landmark -->
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label" for="landmark">Landmark</label>
                                    <input class="form-control" id="landMark" name="landMark" type="text" placeholder="Enter Landmark" required minlength="2" maxlength="100" pattern="^[A-Za-z\s,./-]+$" oninput="this.value = this.value.replace(/[0-9]/g, '')">
                                    <div class="invalid-feedback">Enter a valid landmark (letters, spaces, and punctuation only).</div>
                                </div>
                            </div>
                            <!-- Pincode -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label" for="pincode">Pincode</label>
                                    <input class="form-control" id="pincode" name="pinCode" type="text" placeholder="Enter Pincode" required pattern="[0-9]{6}" maxlength="6">
                                    <div class="invalid-feedback">Enter a valid 6-digit pincode.</div>
                                </div>
                            </div>
                            <!-- Phone -->
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label" for="phone">Phone Number</label>
                                    <input class="form-control" id="phone" name="phone" type="tel" placeholder="Enter Phone Number" required pattern="[0-9]{10}" maxlength="10">
                                    <div class="invalid-feedback">Enter a valid 10-digit phone number.</div>
                                </div>
                            </div>
                            <!-- Alternate Phone -->
                            <div class="col-12">
                                <div class="form-group">
                                    <label class="form-label" for="altPhone">Alt Phone (optional)</label>
                                    <input class="form-control" id="altPhone" name="altPhone" type="tel" placeholder="Enter Phone Number" pattern="[0-9]{10}" maxlength="10">
                                    <div class="invalid-feedback">Enter a valid 10-digit phone number.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Cancel</button>
                    <button class="btn btn-primary" type="submit">Submit</button>
                </div>
            </form>
            
                 
        </div>
    </div>
</div>
 
<script>

document.addEventListener('DOMContentLoaded', function() {
    const addressForm = document.getElementById('addressForm');
    if (addressForm) {
        addressForm.addEventListener('submit', async (event) => {
            console.log("Form submission intercepted");
            event.preventDefault();
           if(!addressForm.checkValidity()){
            event.stopPropagation();
            addressForm.classList.add('was-validated');
            return;
        }
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
       
            try {
                const response = await fetch('/profile/add-address', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();
                if (response.ok) {

                    if (result.success) {
                        console.log("Address added successfully");
                        const modal = bootstrap.Modal.getInstance(document.getElementById('address-modal'));
                    await Swal.fire({
                            icon: "success",
                            title: "Address Added Successfully!",
                            showConfirmButton: false,
                            timer: 1500,
                            width: 500,
                            heightAuto: true,
                            borderRadius: '50px',
                            background: '#f8f9fa',
                        });
                        window.location.reload();
                    if (modal) {
                  modal.hide();
                 // Remove the modal backdrop
                   const backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) {
                 backdrop.remove();
                 }
                 document.body.classList.remove('modal-open'); // Ensure no leftover modal styles
                 }


                    } else {
                        throw new Error(result.message || "Failed to add address.");
                        console.log( result.message);
                    }
                } else {
                    swal.fire({
                        icon: "error",
                        title: "Error",
                        text:  result.message || "Server responded with an error.",
                    });
                }
            } catch (error) {
                console.error("Error details:", error);

                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: error.message || "Could not add the address. Please try again.",
                });
            }
        });
    } else {
        console.error("Address form not found");
    }
});
</script>


<script>
        document.addEventListener('DOMContentLoaded', function () {
    const orderForm = document.getElementById('placeOrderForm');
    if (orderForm) {
        orderForm.addEventListener('click', async (event) => {
            event.preventDefault();

            const selectedAddressId = document.querySelector('input[name="address"]:checked')?.value;
            const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;

            // Validation: Ensure both address and payment method are selected
            if (!selectedAddressId) {
                Toastify({ text: "Please select an address.", backgroundColor: "red",
                    style: {
                        color: "#FFFFFF", // White text color
                        fontWeight: "bold", // Bold text
                     },
                 }).showToast();
                return;
            }
            if (!selectedPaymentMethod) {
                Toastify({
                    text: "Please select a payment method.",
                    backgroundColor: "red",
                    style: {
                        color: "#ffffff", // White text color
                        fontWeight: "bold", // Bold text
                        borderRadius: "10px",
                    },
                }).showToast();
                return;
            }

            // Show confirmation alert
            const result = await Swal.fire({
                title: 'Confirm Order',
                text: 'Are you sure you want to place this order?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, place order!',
                cancelButtonText: 'No, cancel'
            });

            if (!result.isConfirmed) {
                return;
            }
          
            // Get the applied coupon code
            const appliedCouponElement = document.querySelector('.coupon-input .input-group[data-applied-coupon]');
            const couponCode = appliedCouponElement ? appliedCouponElement.getAttribute('data-applied-coupon') : '';
            
            // Prepare order data
            const orderData = {
                addressId: selectedAddressId,
                paymentMethod: selectedPaymentMethod,
                totalPrice: '<%= finalTotal %>',
                Discount: '<%= discount %>',
                couponCode: couponCode
            };

            try {
                const response = await fetch('/order/place', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderData),
                });

                const result = await response.json();

                if (response.ok) {
                    if (selectedPaymentMethod === "ONLINE") {
                         const razorpayOptions = {
                            key: result.razorpayKey || '<%= razorpayKey %>',  
                            amount: result.amount,
                            currency: result.currency,
                            name: "ShutterCart",
                            description: "Order Payment",
                            order_id: result.razorpayOrderId,  
                            handler: async function (response) {
                                 const paymentData = {
                                    razorpayPaymentId: response.razorpay_payment_id,
                                    razorpayOrderId: response.razorpay_order_id,
                                    razorpaySignature: response.razorpay_signature,
                                };

                                 const verifyResponse = await fetch('/order/verify', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify(paymentData),
                                });

                                const verifyResult = await verifyResponse.json();
                                if (verifyResponse.ok) {
                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Payment Successful',
                                        text: 'Your payment has been processed successfully!',
                                     })
                                    window.location.href = `/order/success?Id=${verifyResult.orderId}`;
                                } else {
                                    await Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed',
                                        text: verifyResult.message || 'An error occurred while processing the payment.',
                                    });
                                }
                            },
                            prefill: {
                                name: "<%= user.name %>",  
                                email: "<%= user.email %>",  
                                contact: "<%= user.phone %>",  
                            },
                            theme: {
                                color: "#333",
                            },
                        };

                        const razorpay = new Razorpay(razorpayOptions);
                        razorpay.open();

                         razorpay.on('payment.failed',async function (response) {
                            await Swal.fire({
                                icon: "error",
                                title: "Payment Failed",
                                text: "Payment failed. Please try again.",
                            });

                            console.error("Payment failed:", response.error);
                        });
                    } else {
                        // COD flow
                        await Swal.fire({
                            icon: "success",
                            title: "Order Placed Successfully",
                            text: "Your order has been placed successfully.",
                        });
                        window.location.href = `/order/success?Id=${result.orderId}`;
                    }
                } else {
                    swal.fire({
                        icon: "error",
                        title: "Error",
                        text: result.message || "Order placement failed.",
                    });
                }
            } catch (error) {
                console.error("Order Error:", error);
                swal.fire({
                    icon: "error",
                    title: "Error",
                    text: result.message || "An error occurred while placing the order.",
                });
            }
        });
    }
});

</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <!-- ----------------------------------------------- -->
 
<script>
    async function applyCouponCode() {
        try {
            const couponCode = document.getElementById('couponCode').value.trim();
            const messageDiv = document.getElementById('couponMessage');
            const couponInput = document.getElementById('couponCode');
            const couponInputGroup = document.querySelector('.coupon-input .input-group');

            if (!couponCode) {
                Swal.fire({
                    icon: 'warning',
                title: 'Oops...',
                    text: 'Please enter a coupon code',
                });
                return;
            }

            const response = await fetch('/apply-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ couponCode }),
            });

            const data = await response.json();

            if (data.success) {
                // Update total amount
                const totalElement = document.querySelector('.total h6:last-child');
                if (totalElement && data.finalAmount !== undefined) {
                    totalElement.textContent = '₹' + parseFloat(data.finalAmount).toFixed(2);
                }

                // Update discount if element exists
                const discountElement =document.getElementById('discount')
                if (discountElement && data.discount !== undefined) {
                    const oldDiscount = parseFloat(discountElement.textContent.replace('₹', '')) 
                    const totalDiscount = +oldDiscount + data.discount;
                    discountElement.textContent = '₹' + totalDiscount.toFixed(2);
                }

                // Update UI for applied coupon
                couponInput.disabled = true;
                
                // Remove apply button and add remove button
                couponInputGroup.innerHTML = `
                    <input type="text" id="couponCode" class="form-control" placeholder="Enter Coupon Code" disabled value="${couponCode}">
                    <button class="btn btn-danger" type="button" onclick="removeCoupon()">
                        Remove
                    </button>
                `;

                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Applied!',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 1500,
                    style: {
                        color: 'green',
                        background: 'white',
                    },
                });

                // Clear any error messages
                messageDiv.textContent = '';
            } else {
                throw new Error(data.message || 'Failed to apply coupon');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Error applying coupon. Please try again.',
                style: {
                    color: 'red',
                    background: 'white',
                },
            });
        }
    }

    async function removeCoupon() {
        try {
            const response = await fetch('/remove-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            });

            const data = await response.json();
             console.log(data.discount)
            if (data.success) {
                // Update total amount
                const totalElement = document.querySelector('.total h6:last-child');
                if (totalElement && data.finalAmount !== undefined) {
                    totalElement.textContent = '₹' + parseFloat(data.finalAmount).toFixed(2);
                }

                // Reset discount to 0
                const discountElement = document.getElementById('discount');
                if (discountElement && data.discount !== undefined) {
                    discountElement.textContent = '₹' + data.discount.toFixed(2);
                }

                // Reset coupon input UI
                const couponInputGroup = document.querySelector('.coupon-input .input-group');
                couponInputGroup.innerHTML = `
                    <input type="text" id="couponCode" class="form-control" placeholder="Enter Coupon Code">
                    <button class="btn btn-primary" type="button" id="applyCoupon">
                        Apply
                    </button>
                `;

                // Re-attach event listener to new apply button
                document.getElementById('applyCoupon').addEventListener('click', applyCouponCode);

                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Removed!',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 1500,
                });
            } else {
                throw new Error(data.message || 'Failed to remove coupon');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Error removing coupon. Please try again.',
            });
        }
    }

    // Add event listener for the Apply Coupon button
    document.addEventListener('DOMContentLoaded', function() {
        const applyButton = document.getElementById('applyCoupon');
        if (applyButton) {
            applyButton.addEventListener('click', applyCouponCode);
        }
    });
</script>

<style>
    /* Dropdown Menu Styling */
    .coupon-dropdown {
        position: relative;
        width: 100%;
    }

    .dropdown-toggle {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
        cursor: pointer;
        background: #fff;
        transition: all 0.3s ease;
    }

    .toggle-content {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .toggle-content i {
        color: #333;
        font-size: 1.1em;
    }

    .toggle-arrow {
        color: #666;
        transition: transform 0.3s ease;
    }

    .dropdown-toggle.active .toggle-arrow {
        transform: rotate(180deg);
    }

    .dropdown-toggle:hover {
        border-color: #333;
    }

    .dropdown-toggle span {
        color: #666;
        font-size: 0.95em;
    }

    /* Update selected state */
    .dropdown-toggle.has-coupon span {
        color: #333;
        font-weight: 500;
    }

    .dropdown-toggle.has-coupon .toggle-content i {
        color: #2ea843;
    }
    .coupon-left {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .coupon-icon {
        color: #333;
        font-size: 1.2em;
        width: 24px;
        text-align: center;
    }

    .dropdown-item {
        padding: 12px 15px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom: 1px solid #eee;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .dropdown-item:last-child {
        border-bottom: none;
    }

    .dropdown-item:hover {
        background: #f8f9fa;
    }

    .coupon-info {
        display: flex;
        flex-direction: column;
        gap: 2px;
    }

    .coupon-code {
        font-weight: 600;
        color: #2c3e50;
    }

    .coupon-discount {
        font-size: 0.85em;
        color: #2ea843;
        font-weight: 600;
    }

    .coupon-min {
        font-size: 0.75em;
        color: #666;
    }

    .copy-btn {
        padding: 5px 10px;
        background: #e9ecef;
        border: none;
        border-radius: 4px;
        color: #495057;
        font-size: 0.85em;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .copy-btn:hover {
        background: #333;
        color: #fff;
    }

    .copy-btn.copied {
        background: #333;
        color: #fff;
    }

    .dropdown-item.selected {
        background-color: #f8f9fa;
    }
    .coupon-left {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .coupon-icon {
        color: #333;
        font-size: 1.2em;
        width: 24px;
        text-align: center;
    }

    .dropdown-item {
        padding: 12px 15px;
        transition: background-color 0.2s ease;
    }

    .dropdown-item:hover {
        background-color: #f8f9fa;
    }

    .dropdown-menu {
        padding: 8px;
        max-height: 300px;
        overflow-y: auto;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const dropdown = document.getElementById('couponDropdown');
        const menu = document.querySelector('.dropdown-menu');
        const couponCode = document.getElementById('couponCode');
        const couponDetails = document.getElementById('couponDetails');

        // Toggle dropdown
        if (dropdown) {
            dropdown.addEventListener('click', function() {
                this.classList.toggle('active');
                menu.classList.toggle('show');
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (!dropdown.contains(e.target) && 
                    !e.target.closest('.copy-btn')) {
                    dropdown.classList.remove('active');
                    menu.classList.remove('show');
                }
            });
        }

        // Handle coupon selection
        const dropdownItems = document.querySelectorAll('.dropdown-item');
        dropdownItems.forEach(item => {
            item.addEventListener('click', function(e) {
                if (!e.target.closest('.copy-btn')) {
                    const couponName = this.dataset.coupon;
                    const discount = this.dataset.discount;
                    const minPurchase = this.dataset.minPurchase;

                    dropdown.querySelector('span').textContent = couponName;
                    dropdown.classList.add('has-coupon');
                    couponCode.value = couponName;
                    updateCouponDetails(discount, minPurchase);
                    applyCouponCode();

                    dropdownItems.forEach(di => di.classList.remove('selected'));
                    this.classList.add('selected');
                    
                    dropdown.classList.remove('active');
                    menu.classList.remove('show');
                }
            });
        });

        // Handle copy buttons
        document.querySelectorAll('.copy-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.stopPropagation();
                const couponToCopy = this.dataset.coupon;
                
                // Reset all copy buttons
                document.querySelectorAll('.copy-btn').forEach(otherBtn => {
                    if (otherBtn !== this) {
                        otherBtn.innerHTML = '<i class="far fa-copy"></i> Copy';
                        otherBtn.classList.remove('copied');
                    }
                });

                // Copy to clipboard and update button
                navigator.clipboard.writeText(couponToCopy).then(() => {
                    this.innerHTML = '<i class="fas fa-check"></i> Copied!';
                    this.classList.add('copied');
                    
                    setTimeout(() => {
                        this.innerHTML = '<i class="far fa-copy"></i> Copy';
                        this.classList.remove('copied');
                    }, 2000);
                });
            });
        });
    });

    function updateCouponDetails(discount, minPurchase) {
        const couponDetails = document.getElementById('couponDetails');
        couponDetails.style.display = 'block';
        couponDetails.innerHTML = `
            <div class="coupon-details-card">
                <div class="coupon-title">Coupon Details</div>
                <div class="coupon-info">
                    <div class="coupon-amount" style="color: #2ea843; font-weight: 600;">
                        <i class="fas fa-tags"></i>
                        Save ₹${discount} on your order
                    </div>
                    <div class="coupon-minimum">
                        <i class="fas fa-info-circle"></i>
                        Minimum order value: ₹${minPurchase}
                    </div>
                </div>
            </div>
        `;
    }
</script>

<style>
    .copy-btn {
        padding: 5px 10px;
        background: #e9ecef;
        border: none;
        border-radius: 4px;
        color: #495057;
        font-size: 0.85em;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .copy-btn:hover {
        background: #333;
        color: #fff;
    }

    .copy-btn.copied {
        background: #333;
        color: #fff;
    }

    .dropdown-item.selected {
        background-color: #f8f9fa;
    }
</style>
</script>

    <%- include('../partials/user/footer') %>

<style>
    .product-carousel {
        background: #fff;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin: 0 auto;
        max-width: 800px;
        padding-bottom: 35px;
    }

    .product-slide {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 5px;
    }

    .product-image {
        width: 80px;
        height: 80px;
        flex-shrink: 0;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        border-radius: 4px;
    }

    .product-info {
        flex-grow: 1;
    }

    .product-info h5 {
        margin: 0 0 5px;
        font-size: 0.95em;
        color: #333;
    }

    .price-info {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 4px;
    }

    .sale-price {
        font-size: 1em;
        font-weight: 600;
        color: #333;
    }

    .regular-price {
        text-decoration: line-through;
        color: #999;
        font-size: 0.8em;
    }

    .discount {
        color: #2ea843;
        font-size: 0.8em;
        font-weight: 500;
    }

    .quantity {
        color: #666;
        font-size: 0.8em;
    }

    .carousel-indicators {
        bottom: -30px;
    }

    .carousel-indicators button {
        width: 6px !important;
        height: 6px !important;
        border-radius: 50% !important;
        background-color: #ccc !important;
        margin: 0 3px !important;
        opacity: 0.5;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 25px;
        height: 25px;
        background: rgba(0,0,0,0.3);
        border-radius: 50%;
        top: 50%;
        transform: translateY(-50%);
    }

    .carousel-control-prev {
        left: 5px;
    }

    .carousel-control-next {
        right: 5px;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        width: 12px;
        height: 12px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize the carousel with Bootstrap's carousel method
        const carousel = new bootstrap.Carousel(document.getElementById('productCarousel'), {
            interval: 3000,
            wrap: true,
            touch: true
        });

        // Pause on hover (optional)
        document.getElementById('productCarousel').addEventListener('mouseenter', function() {
            carousel.pause();
        });

        document.getElementById('productCarousel').addEventListener('mouseleave', function() {
            carousel.cycle();
        });
    });
</script>